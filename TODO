## ToDo list

### Compatibility

- Support non SDL stuff (Unity?)
- Add dummy Steam API functions so that the game can be launched without it
-- Headers: https://github.com/ValveSoftware/source-sdk-2013/tree/master/sp/src/public/steam

### Features

- Add a memory watch/search module
- Add fake-savestating (saving inputs and reset/fastforward/pause)

### Fixes

- Make the code thread safe
- Awake the game window to prevent the server for considering it as frozen
- Remove as much X events to process as possible to avoid using SDL_PumpEvents, because they are just hidden inputs. Also, they call SDL_Ticks(), which is bad

## Partially done

- Standardize communication between game and program
-- Rewrite the socket sharing to assure that full information is send/receive (for arrays mainly)
- Dump video
-- Some muxers do not work (mp4)
-- Must support or disable screen resizing
- Support savestates (good luck)
-- Implement alternate ways to save/load the game memory (direct read into /proc/pid/mem and ptrace calls, or criu)
-- Disable openAL sound, remove one error
-- Output the game into a dummy X server (xvfb) and show this server on the real one
-- Hook low-level memory allocation functions (brk/mmap) instead of malloc
-- look at DMTCP (http://dmtcp.sourceforge.net/)
- Dump audio
-- Test SDL 2 Audio (push method)
-- Crash in Dustforce: "Assertion 0 failed at libswresample/rematrix.c:414"
-- Hook pulse audio (shovel knight?)
- Add an interface (fltk)
-- Add HUD options
-- Enable/disable time-advance hack for child threads
- Record inputs and support playback
-- Write extra (sync) informations in the movie file

## Done

- Add config file for hotkeys and key remapping
- Add a thread local flag saying if calls are made by the game or by our code (callerisunstrusted in Hourglass)
- Don't send keys that correspond to hotkeys
- Write a better compile script
- Support fast-forward (some desyncs if done at the very beginning of the game)
- Inject keyboard inputs to the game
- Add an auto-repeat for frame advance
- Support game controller
- Support non-gamecontroller joysticks
- Add a deterministic timer instead of relying on SwapInterval
- Allow 32-bit or 64-bit lib compilation
- Add key remapping
- Add both (non)/deterministic timers
- Better manage static and dynamic hooking
- Add a license
- Support mouse
- Emulate our own event queue
- Memory manager
- Support software rendering
- Add inputs into the game screen

