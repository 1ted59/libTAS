## ToDo list

### Compatibility

- Support non SDL stuff (Unity?)
- Add dummy Steam API functions so that the game can be launched without it
-- Headers: https://github.com/ValveSoftware/source-sdk-2013/tree/master/sp/src/public/steam

### Features

- Add inputs into the game screen
-- For working with text and opengl, see http://stackoverflow.com/questions/5289447/using-sdl-ttf-with-opengl/5289823#5289823
-- https://www.libsdl.org/projects/SDL_ttf/
- Add a memory watch/search module
- Add an interface (ncurses?)
- Add config file for hotkeys and key remapping (libconfig?)

### Fixes

- Deal with keyboard mapping and stuff
- Fix grab/ungrab window when a new one is created (ungrab following FocusOut old window comes *after* grab from new window)
- Make the code thread safe
- Add a thread local flag saying if calls are made by the game or by our code (callerisunstrusted in Hourglass)
-- Also use this to detect if some code is executed before we had a chance to call our lib init function

## Partially done

- Standardize communication between game and program
-- Rewrite the socket sharing to assure that full information is send/receive (for arrays mainly)
- Dump video
-- Some muxers do not work (mp4)
-- Must support or disable screen resizing
- Support savestates (good luck)
-- Implement alternate ways to save/load the game memory (direct read into /proc/pid/mem and ptrace calls, or criu)
-- Disable openAL sound, remove one error
-- Now got:
    [xcb] Unknown sequence number while processing queue
    [xcb] Most likely this is a multi-threaded client and XInitThreads has not been called
    [xcb] Aborting, sorry about that.
    SuperMeatBoy: ../../src/xcb_io.c:274: poll_for_event: Assertion `!xcb_xlib_threads_sequence_lost' failed.
- Dump audio
-- Test SDL 2 Audio (push method)
-- Crash in Dustforce: "Assertion 0 failed at libswresample/rematrix.c:414"
- Emulate our own event queue
-- Support enabling/disabling events (for controllers/joysticks)
-- Support filtering

## Done

- Don't send keys that correspond to hotkeys
- Record inputs and support playback
- Write a better compile script
- Support fast-forward (some desyncs if done at the very beginning of the game)
- Inject keyboard inputs to the game
- Add an auto-repeat for frame advance
- Support game controller
- Support non-gamecontroller joysticks
- Add a deterministic timer instead of relying on SwapInterval
- Allow 32-bit or 64-bit lib compilation
- Add key remapping
- Add both (non)/deterministic timers
- Better manage static and dynamic hooking
- Add a license
- Support mouse

